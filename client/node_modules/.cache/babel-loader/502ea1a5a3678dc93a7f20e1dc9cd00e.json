{"ast":null,"code":"import _regeneratorRuntime from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ahmed/Desktop/sails/Medgo/client/src/ContactForm.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Background from './images/bg-01.jpg';\nimport { Field } from './Field';\nimport './vendor/bootstrap/css/bootstrap.min.css';\nimport './fonts/font-awesome-4.7.0/css/font-awesome.min.css';\nimport './vendor/animate/animate.css';\nimport './vendor/css-hamburgers/hamburgers.min.css';\nimport './vendor/select2/select2.min.css';\nimport './css/util.css';\nimport './css/main.css';\nvar sectionStyle = {\n  backgroundImage: 'url(' + Background + ')'\n};\nvar jsonMSGs = {};\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).call(this, props));\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.ValidateUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      var isValid = false;\n\n      switch (name) {\n        case 'email':\n          isValid = _this.valideMail(value);\n          break;\n\n        case 'name':\n          isValid = _this.valideName(value);\n          break;\n\n        case 'message':\n          isValid = _this.valideMessage(value);\n          break;\n\n        default:\n          break;\n      }\n\n      if (!isValid) {\n        e.target.className = \" error-input100 input100\";\n      } else e.target.className = \" success-input100 input100\";\n    };\n\n    _this.valideMail = function (mail) {\n      var mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/;\n\n      if (mail.match(mailformat)) {\n        _this.setState({\n          isMailValid: true\n        });\n\n        return true;\n      } else {\n        _this.setState({\n          isMailValid: false\n        });\n\n        return false;\n      }\n    };\n\n    _this.valideMessage = function (message) {\n      if (message === '') {\n        _this.setState({\n          isMessageValid: false\n        });\n\n        return false;\n      } else {\n        _this.setState({\n          isMessageValid: true\n        });\n\n        return true;\n      }\n    };\n\n    _this.valideName = function (name) {\n      return true;\n    };\n\n    _this.getJson = function () {\n      var y = JSON.parse(_this.state.res);\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, y[0].map(function (item, index) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, item.Name);\n      }));\n    };\n\n    _this.fnrend = function () {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Helo\");\n    };\n\n    _this.fetchData = function (e) {\n      fetch('/api/hello').then(function (response) {\n        if (!response.ok) {\n          throw new Error(\"status \".concat(response.status));\n        }\n\n        return response.json();\n      }).then(function (json) {\n        jsonMSGs = json;\n        var myObjStr = JSON.stringify(json);\n\n        _this.setState({\n          res: json\n        });\n      }).catch(function (e) {\n        _this.setState({\n          response: \"API call failed: \".concat(e)\n        });\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return fetch('/api/world', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    name: _this.state.name,\n                    email: _this.state.email,\n                    message: _this.state.message\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      name: '0',\n      email: \"1\",\n      message: '',\n      isMailValid: true,\n      isMessageValid: true,\n      isNameValid: true,\n      serverName: '',\n      body: '',\n      response: 'r',\n      post: '',\n      responseToPost: '',\n      res: [],\n      pressed: ''\n    };\n    return _this;\n  }\n\n  _createClass(ContactForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-contact100\",\n        style: sectionStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-contact100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap-contact100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"contact100-pic js-tilt\",\n        \"data-tilt\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('./images/img-01.png'),\n        alt: \"IMG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        className: \"contact100-form validate-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"contact100-form-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Get in touch response :\", jsonMSGs[0].Name), React.createElement(Field, {\n        type: \"text\",\n        name: \"name\",\n        icon: \"fa-user\",\n        onchange: function onchange(e) {\n          _this2.handleUserInput(e);\n        },\n        onBlur: function onBlur(e) {\n          _this2.ValidateUserInput(e);\n        },\n        value: this.state.name,\n        isValid: this.state.isNameValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Field, {\n        type: \"text\",\n        name: \"email\",\n        icon: \"fa-envelope\",\n        onchange: function onchange(e) {\n          _this2.handleUserInput(e);\n        },\n        onBlur: function onBlur(e) {\n          _this2.ValidateUserInput(e);\n        },\n        value: this.state.email,\n        isValid: this.state.isMailValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(Field, {\n        type: \"textarea\",\n        name: \"message\",\n        onchange: function onchange(e) {\n          _this2.handleUserInput(e);\n        },\n        onBlur: function onBlur(e) {\n          _this2.ValidateUserInput(e);\n        },\n        value: this.state.message,\n        isValid: this.state.isMessageValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-contact100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"send\",\n        className: \"contact100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"reponse : \", this.state.responseToPost), React.createElement(this.fnrend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"get Values\",\n        className: \"contact100-form-btn\",\n        onClick: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), this.state.pressed))))));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/ahmed/Desktop/sails/Medgo/client/src/ContactForm.js"],"names":["React","Component","Background","Field","sectionStyle","backgroundImage","jsonMSGs","ContactForm","props","handleUserInput","e","name","target","value","setState","ValidateUserInput","isValid","valideMail","valideName","valideMessage","className","mail","mailformat","match","isMailValid","message","isMessageValid","getJson","y","JSON","parse","state","res","map","item","index","Name","fnrend","fetchData","fetch","then","response","ok","Error","status","json","myObjStr","stringify","catch","handleSubmit","preventDefault","method","headers","body","email","text","responseToPost","isNameValid","serverName","post","pressed","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Background from './images/bg-01.jpg';\nimport  { Field } from './Field';\nimport './vendor/bootstrap/css/bootstrap.min.css';\nimport './fonts/font-awesome-4.7.0/css/font-awesome.min.css';\nimport './vendor/animate/animate.css';\nimport './vendor/css-hamburgers/hamburgers.min.css';\nimport './vendor/select2/select2.min.css';\nimport './css/util.css';\nimport './css/main.css';\nconst sectionStyle = {\n    backgroundImage: 'url(' + Background + ')',\n};\n\n\nvar jsonMSGs ={}\n\nclass ContactForm extends Component {\n\n    constructor(props) {\n      super(props);\n      \n      this.state = {name: '0',\n                    email: \"1\",\n                    message: '',\n                    isMailValid : true,\n                    isMessageValid : true,\n                    isNameValid: true,\n                    serverName: '',\n                    body: '',\n                    response: 'r',\n                    post: '',\n                    responseToPost: '',\n                    res : [] ,\n                    pressed: ''\n    };\n    \n    }\n\n    componentDidMount() {\n     this.fetchData();\n    }\n    handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value})\n    }\n    \n    ValidateUserInput = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      let isValid= false;\n      switch(name) {\n        case 'email':\n          isValid=this.valideMail(value)\n          break\n        case 'name':\n          isValid=this.valideName(value)\n          break\n        case 'message' : \n          isValid=this.valideMessage(value)\n          break\n\n        default:\n        break;\n      }\n        if (!isValid) {      e.target.className  = \" error-input100 input100\"\n      }\n      else       e.target.className  = \" success-input100 input100\"\n\n    }\n\n    valideMail = (mail) => {\n      const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/;\n      if( mail.match(mailformat))\n      {\n          this.setState ({isMailValid : true})\n          return true;\n      }\n      else\n      {\n        this.setState ({isMailValid : false})\n      return false;\n      \n      }\n    }\n    valideMessage = (message) => {\n      if (message === ''){\n        this.setState ({isMessageValid : false})\n          return false;\n      }\n      else {\n        this.setState ({isMessageValid : true})\n        return true;\n      }\n    }\n    valideName = (name) => {\n      return true;\n    }\n\n    getJson  = () => {\n      let y=  JSON.parse(this.state.res) \n      return (\n        <ul>\n         { y[0].map(function(item,index) {\n            return(\n             <li>{item.Name}</li> \n            )\n          })}\n        </ul>\n      )\n    }\n    fnrend = () => {\n      return ( <p>Helo</p>)\n    }\n    fetchData = (e) => {\n      fetch('/api/hello')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`status ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(json => {\n        jsonMSGs = json\n        const myObjStr = JSON.stringify(json);\n        \n        this.setState({\n          res: json,\n        });\n        \n      }).catch(e => {\n        this.setState({\n          response: `API call failed: ${e}`,\n        });\n      })\n    }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name: this.state.name, \n                             email: this.state.email,\n                             message: this.state.message }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body });\n\n   \n  };\n  \n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"bg-contact100\" style={ sectionStyle } >\n            <div className=\"container-contact100\">\n              <div className=\"wrap-contact100\">\n                <div className=\"contact100-pic js-tilt\" data-tilt>\n                  <img src={require('./images/img-01.png')}  alt=\"IMG\"/>\n                </div>\n                <form className=\"contact100-form validate-form\" onSubmit={this.handleSubmit}>\n                  <span className=\"contact100-form-title\">\n                    Get in touch\n                    response : \n                    {jsonMSGs[0].Name}\n                  </span>\n                  <Field type=\"text\" \n                         name=\"name\" \n                         icon=\"fa-user\" \n                         onchange= {(e) => {this.handleUserInput(e)}}\n                         onBlur = {(e) => {this.ValidateUserInput(e)}} \n                         value={this.state.name}\n                         isValid = {this.state.isNameValid}/>\n\n                      \n                  <Field type=\"text\" \n                         name=\"email\" \n                         icon=\"fa-envelope\" \n                         onchange= {(e) => {this.handleUserInput(e)}} \n                         onBlur = {(e) => {this.ValidateUserInput(e)}} \n                         value={this.state.email}\n                         isValid = {this.state.isMailValid} />\n\n                 \n                  <Field type=\"textarea\"\n                         name=\"message\"\n                         onchange= {(e) => {this.handleUserInput(e)}}\n                         onBlur = {(e) => {this.ValidateUserInput(e)}}\n                         value={this.state.message}\n                         isValid = {this.state.isMessageValid}/>\n                  \n                  <div className=\"container-contact100-form-btn\">\n                    <input type=\"submit\" value=\"send\"  className=\"contact100-form-btn\" />\n                   \n                      \n                    <p>reponse : {this.state.responseToPost}</p>\n                    <this.fnrend></this.fnrend>\n                    <input type=\"submit\" value=\"get Values\"  className=\"contact100-form-btn\" onClick= {this.fetchData}/>\n                    {this.state.pressed}\n                  </div>\n                </form>\n              </div>\n            </div>\n        </div>\n\n       \n\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}