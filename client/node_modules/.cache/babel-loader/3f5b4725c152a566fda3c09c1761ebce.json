{"ast":null,"code":"import _classCallCheck from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ahmed/Desktop/sails/Medgo/client/src/Field.js\";\nimport React from 'react';\nexport var Field =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  function Field() {\n    _classCallCheck(this, Field);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Field).apply(this, arguments));\n  }\n\n  _createClass(Field, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap-input100 validate-input\",\n        \"data-validate\": \"Name is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, this.props.type === \"text\" && React.createElement(\"input\", {\n        className: \"input100 \" + this.props.isValid ? '' : ' error-input100 ',\n        type: \"text\",\n        name: this.props.name,\n        placeholder: this.props.name,\n        onBlur: this.props.onBlur,\n        onChange: this.props.onchange,\n        value: this.props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), this.props.type === \"textarea\" && React.createElement(\"textarea\", {\n        className: \"input100 \" + (this.props.isValid ? \" \" : \" error-input100 \"),\n        name: \"message\",\n        placeholder: \"Message\",\n        value: this.props.value,\n        onChange: this.props.onchange,\n        onBlur: this.props.onBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"focus-input100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \" \"), this.props.type === \"text\" && React.createElement(\"span\", {\n        className: \"symbol-input100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa \" + this.props.icon,\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }))), React.createElement(\"span\", {\n        style: {\n          display: this.props.isValid ? \"none\" : \"block\",\n          color: 'rgb(198, 17, 17, 0.5)',\n          marginTop: '10px',\n          fontSize: '0.9em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation-triangle\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), \" \", this.props.name, \" is wrong\"));\n    }\n  }]);\n\n  return Field;\n}(React.Component);\nField.defaultProps = {\n  message: 'j'\n};","map":{"version":3,"sources":["/home/ahmed/Desktop/sails/Medgo/client/src/Field.js"],"names":["React","Field","props","type","isValid","name","onBlur","onchange","value","icon","display","color","marginTop","fontSize","Component","defaultProps","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,WAAaC,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEY;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,8BAAf;AAA8C,yBAAgB,kBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACU,KAAKC,KAAL,CAAWC,IAAX,KAAoB,MAArB,IACF;AAAO,QAAA,SAAS,EAAE,cAAc,KAAKD,KAAL,CAAWE,OAAzB,GAAmC,EAAnC,GAAuC,kBAAzD;AACO,QAAA,IAAI,EAAC,MADZ;AACmB,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,IADpC;AAEO,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG,IAF/B;AAGO,QAAA,MAAM,EAAI,KAAKH,KAAL,CAAWI,MAH5B;AAIO,QAAA,QAAQ,EAAG,KAAKJ,KAAL,CAAWK,QAJ7B;AAKO,QAAA,KAAK,EAAK,KAAKL,KAAL,CAAWM,KAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFP,EAUS,KAAKN,KAAL,CAAWC,IAAX,KAAoB,UAArB,IACD;AAAU,QAAA,SAAS,EAAE,eAAe,KAAKD,KAAL,CAAWE,OAAX,GAAqB,GAArB,GAA0B,kBAAzC,CAArB;AAAmF,QAAA,IAAI,EAAC,SAAxF;AACU,QAAA,WAAW,EAAC,SADtB;AAEU,QAAA,KAAK,EAAI,KAAKF,KAAL,CAAWM,KAF9B;AAGU,QAAA,QAAQ,EAAG,KAAKN,KAAL,CAAWK,QAHhC;AAIU,QAAA,MAAM,EAAI,KAAKL,KAAL,CAAWI,MAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXP,EAkBO;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBP,EAoBU,KAAKJ,KAAL,CAAWC,IAAX,KAAoB,MAArB,IACF;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAE,QAAQ,KAAKD,KAAL,CAAWO,IAAjC;AAAuC,uBAAY,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CArBP,CADA,EA4BD;AAAM,QAAA,KAAK,EAAI;AAACC,UAAAA,OAAO,EAAG,KAAKR,KAAL,CAAWE,OAAX,GAAqB,MAArB,GAA8B,OAAzC;AACSO,UAAAA,KAAK,EAAG,uBADjB;AAESC,UAAAA,SAAS,EAAE,MAFpB;AAGSC,UAAAA,QAAQ,EAAE;AAHnB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIQ;AAAG,QAAA,SAAS,EAAE,4BAAd;AAA4C,uBAAY,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR,OAI6E,KAAKX,KAAL,CAAWG,IAJxF,cA5BC,CADJ;AAoCJ;AAvCL;;AAAA;AAAA,EAA2BL,KAAK,CAACc,SAAjC;AAyCAb,KAAK,CAACc,YAAN,GAAqB;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB","sourcesContent":["import React from 'react';\n\nexport class Field extends React.Component {\n\n    render(){\n         return(\n             <div>\n             <div className=\"wrap-input100 validate-input\" data-validate = \"Name is required\">\n                    { (this.props.type === \"text\") &&\n                    <input className={\"input100 \" + this.props.isValid ? '': ' error-input100 '}\n                           type=\"text\" name={this.props.name} \n                           placeholder={this.props.name}\n                           onBlur = {this.props.onBlur}\n                           onChange= {this.props.onchange}\n                           value =  {this.props.value}/>\n                    }\n\n                    {(this.props.type === \"textarea\") &&\n                    <textarea className={\"input100 \" + (this.props.isValid ? \" \": \" error-input100 \")} name=\"message\" \n                              placeholder=\"Message\" \n                              value = {this.props.value} \n                              onChange= {this.props.onchange}\n                              onBlur = {this.props.onBlur}/>\n                    }\n\n                    <span className=\"focus-input100\"> </span>\n\n                    { (this.props.type === \"text\") &&   \n                    <span className=\"symbol-input100\">\n                      <i className={\"fa \" + this.props.icon} aria-hidden=\"true\"></i>\n                    </span> \n                    }\n                    \n            </div>\n            <span style ={ {display : this.props.isValid ? \"none\" : \"block\",\n                                    color : 'rgb(198, 17, 17, 0.5)',\n                                    marginTop: '10px',\n                                    fontSize: '0.9em'}}> \n                    <i className={\"fa fa-exclamation-triangle\"} aria-hidden=\"true\"></i> {this.props.name} is wrong</span>\n            </div>\n         )\n    }\n}\nField.defaultProps = {\n    message: 'j',\n  };"]},"metadata":{},"sourceType":"module"}