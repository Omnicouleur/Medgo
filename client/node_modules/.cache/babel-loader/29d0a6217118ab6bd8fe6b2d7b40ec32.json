{"ast":null,"code":"import _regeneratorRuntime from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ahmed/Desktop/sails/Medgo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ahmed/Desktop/sails/Medgo/client/src/ContactForm.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Background from './images/bg-01.jpg';\nimport { Field } from './Field';\nimport './vendor/bootstrap/css/bootstrap.min.css';\nimport './fonts/font-awesome-4.7.0/css/font-awesome.min.css';\nimport './vendor/animate/animate.css';\nimport './vendor/css-hamburgers/hamburgers.min.css';\nimport './vendor/select2/select2.min.css';\nimport './css/util.css';\nimport './css/main.css';\nvar sectionStyle = {\n  backgroundImage: 'url(' + Background + ')'\n};\nvar jsonMSGs = [{\n  Name: 'Ahmed'\n}];\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).call(this, props));\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.ValidateUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      var isValid = false;\n\n      switch (name) {\n        case 'email':\n          isValid = _this.valideMail(value);\n          break;\n\n        case 'name':\n          isValid = _this.valideName(value);\n          break;\n\n        case 'message':\n          isValid = _this.valideMessage(value);\n          break;\n\n        default:\n          break;\n      }\n\n      if (!isValid) {\n        e.target.className = \" error-input100 input100\";\n      } else e.target.className = \" success-input100 input100\";\n\n      _this.state.btnIsDisabled = !(_this.valideMail(_this.state.email) && _this.valideName(_this.state.name) && _this.valideMessage(_this.state.message));\n    };\n\n    _this.valideMail = function (mail) {\n      var mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/;\n\n      if (mail.match(mailformat)) {\n        _this.setState({\n          isMailValid: true\n        });\n\n        return true;\n      } else {\n        _this.setState({\n          isMailValid: false\n        });\n\n        return false;\n      }\n    };\n\n    _this.valideMessage = function (message) {\n      if (message === '') {\n        _this.setState({\n          isMessageValid: false\n        });\n\n        return false;\n      } else {\n        _this.setState({\n          isMessageValid: true\n        });\n\n        return true;\n      }\n    };\n\n    _this.valideName = function (name) {\n      var nameformat = /^[a-zA-Z ]+$/;\n\n      if (name.match(nameformat)) {\n        _this.setState({\n          isNameValid: true\n        });\n\n        return true;\n      } else {\n        _this.setState({\n          isNameValid: false\n        });\n\n        return false;\n      }\n    };\n\n    _this.fetchData = function (e) {\n      fetch('/api/hello').then(function (response) {\n        if (!response.ok) {\n          throw new Error(\"status \".concat(response.status));\n        }\n\n        return response.json();\n      }).then(function (json) {\n        jsonMSGs = json;\n      }).catch(function (e) {\n        _this.setState({\n          response: \"API call failed: \".concat(e)\n        });\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return fetch('/api/world', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    name: _this.state.name,\n                    email: _this.state.email,\n                    message: _this.state.message\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context.sent;\n\n                _this.setState({\n                  responseToPost: body,\n                  isSuccessful: true\n                });\n\n                _this.fetchData();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      name: '',\n      email: \"\",\n      message: '',\n      isMailValid: true,\n      isMessageValid: true,\n      isNameValid: true,\n      responseToPost: '',\n      isSuccessful: false,\n      btnIsDisabled: true\n    };\n    return _this;\n  }\n\n  _createClass(ContactForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-contact100\",\n        style: sectionStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-contact100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap-contact100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"contact100-pic js-tilt\",\n        \"data-tilt\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('./images/img-01.png'),\n        alt: \"IMG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        style: {\n          display: this.props.isSuccessful ? \"none\" : \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"  \", this.state.responseToPost)))), React.createElement(\"div\", {\n        className: \"tbl-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, jsonMSGs.map(function (item, index) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, item.Name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, item.Email ? item.Email : ''), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, item.Message ? item.Message : ''));\n      }))));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/ahmed/Desktop/sails/Medgo/client/src/ContactForm.js"],"names":["React","Component","Background","Field","sectionStyle","backgroundImage","jsonMSGs","Name","ContactForm","props","handleUserInput","e","name","target","value","setState","ValidateUserInput","isValid","valideMail","valideName","valideMessage","className","state","btnIsDisabled","email","message","mail","mailformat","match","isMailValid","isMessageValid","nameformat","isNameValid","fetchData","fetch","then","response","ok","Error","status","json","catch","handleSubmit","preventDefault","method","headers","body","JSON","stringify","text","responseToPost","isSuccessful","require","display","map","item","index","Email","Message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Background from './images/bg-01.jpg';\nimport  { Field } from './Field';\nimport './vendor/bootstrap/css/bootstrap.min.css';\nimport './fonts/font-awesome-4.7.0/css/font-awesome.min.css';\nimport './vendor/animate/animate.css';\nimport './vendor/css-hamburgers/hamburgers.min.css';\nimport './vendor/select2/select2.min.css';\nimport './css/util.css';\nimport './css/main.css';\nconst sectionStyle = {\n    backgroundImage: 'url(' + Background + ')',\n};\n\n\nvar jsonMSGs =[{Name:'Ahmed'}]\n\nclass ContactForm extends Component {\n\n    constructor(props) {\n      super(props);\n      \n      this.state = {name: '',\n                    email: \"\",\n                    message: '',\n                    isMailValid : true,\n                    isMessageValid : true,\n                    isNameValid: true,\n                    responseToPost: '',\n                    isSuccessful : false,\n                    btnIsDisabled : true    };\n\n    }\n\n    componentDidMount() {\n     this.fetchData();\n    }\n    handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value})\n    }\n    \n    ValidateUserInput = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      let isValid= false;\n      switch(name) {\n        case 'email':\n          isValid=this.valideMail(value)\n          break\n        case 'name':\n          isValid=this.valideName(value)\n          break\n        case 'message' : \n          isValid=this.valideMessage(value)\n          break\n\n        default:\n        break;\n      }\n        if (!isValid) {      e.target.className  = \" error-input100 input100\"\n      }\n      else       e.target.className  = \" success-input100 input100\"\n\n      this.state.btnIsDisabled= !(this.valideMail(this.state.email) \n                                  && this.valideName(this.state.name) \n                                  && this.valideMessage(this.state.message) )\n    }\n\n    valideMail = (mail) => {\n      const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/;\n      if( mail.match(mailformat))\n      {\n          this.setState ({isMailValid : true})\n          return true;\n      }\n      else\n      {\n        this.setState ({isMailValid : false})\n      return false;\n      }\n    }\n    valideMessage = (message) => {\n      if (message === ''){\n        this.setState ({isMessageValid : false})\n          return false;\n      }\n      else {\n        this.setState ({isMessageValid : true})\n        return true;\n      }\n    }\n    valideName = (name) => {\n      let nameformat = /^[a-zA-Z ]+$/\n      if( name.match(nameformat))\n      {\n          this.setState ({isNameValid : true})\n          return true;\n      }\n      else\n      {\n        this.setState ({isNameValid : false})\n      return false;\n      }\n      \n    }\n\n \n    fetchData = (e) => {\n      fetch('/api/hello')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`status ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(json => {\n        jsonMSGs = json\n      \n        \n      }).catch(e => {\n        this.setState({\n          response: `API call failed: ${e}`,\n        });\n      })\n    }\n\n  handleSubmit = async e => {\n\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name: this.state.name, \n                             email: this.state.email,\n                             message: this.state.message }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body,\n                    isSuccessful : true });\n\n    this.fetchData()\n  };\n  \n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"bg-contact100\" style={ sectionStyle } >\n            <div className=\"container-contact100\">\n              <div className=\"wrap-contact100\">\n                <div className=\"contact100-pic js-tilt\" data-tilt>\n                  <img src={require('./images/img-01.png')}  alt=\"IMG\"/>\n                </div>\n                \n                <p style ={ {display : this.props.isSuccessful ? \"none\" : \"block\",\n                                  }}>  {this.state.responseToPost}</p>\n              </div>\n            </div>\n        </div>\n        \n           <div className=\"tbl-header\">           \n                        \n       <table>  \n       { jsonMSGs.map(function(item,index) {\n                            return(\n                            \n                              <tr>\n                                <td>{item.Name}</td> \n                                <td>{item.Email ? item.Email : ''}</td>\n                                <td>{item.Message ? item.Message : ''}</td>\n                            </tr>\n                         \n                            )\n                          })}\n</table>\n</div>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}